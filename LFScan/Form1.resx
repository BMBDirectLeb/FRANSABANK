<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///4D/////////////////////////////
        //////////////////////////////////////+eAAAAAAAAAAD///+A////gP///y////8uAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////A////wAAAAAAAAAAA////ev///47///8u////LQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////wP///8AAAAAAAAAAAP///yb////c////////
        ///////////////////////////////////////////////////////AAAAAAAAAAAAAAAAAAAAAAP//
        /3f///93////d////3f///93////d////3f///93////PAAAAAD///+O////dQAAAAAAAAAAAAAAAAAA
        AAD///+I////iP///4j///+I////iP///4j///+I////iP///0T///9M////6f///ycAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///0n////I////zf///z0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////PP///7z////V////Xv///wMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///88////vP///9T///9e////AwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///xD////K////y////0z///8BAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAIABAACf+QAA3/kAAMABAAD/+wAA4BsAAP/n
        AAD/nwAA/n8AAPn/AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        ////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAAAAAAAAP///8P////BAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////wAAAAAAAAAA////v///
        /70AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///+b/////////PgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////if//
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8G////iP///+D/////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Bf/////////6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////
        //////////////////////////////////////////////////8AAAAAAAAAAAAAAAD///80////////
        /9oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////
        /////////////////////////////////////////////////////////////wAAAAAAAAAA////Cf//
        /8D/////////iQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Av//
        /1n////Z/////////+L///8WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Av//
        /1r////W///////////////I////KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /03////M///////////////f////Zv///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /03////M///////////////f////Zv///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /03////N///////////////g////Zv///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /03////N///////////////g////Zv///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Af//
        /03////N///////////////g////b////wcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Av//
        /03////O///////////////h////b////wcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///89///////////////a////Xf///wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///+f////Xv///wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////////+AAAAfgAAAH5///5+Z/
        /+fmf//n5///5+AAAAfwAAAH////5/wAAef8AAHH////j////h////h////h////h////h////h////h
        ////x////9//////////////////////////////
</value>
  </data>
</root>